module.exports = (sequelize, DataTypes) => {

  // Type definitions for comment model
  const Comment = sequelize.define(
    "Comment",
    {
      content: DataTypes.TEXT,
      userId: DataTypes.INTEGER,
      postId: DataTypes.INTEGER,
    },
    {},
  );

  // Define relationships between models associated with comment model
  Comment.associate = (models) => {
    Comment.belongsTo(models.User, { foreignKey: 'userId', as: 'author' });
    Comment.belongsTo(models.Post, { foreignKey: 'postId', as: 'post' });
  };
  return Comment;
};

// ~ Code snippet generated by Sequelize: 

/* 'use strict';
const {
  Model
} = require('sequelize');
module.exports = (sequelize, DataTypes) => {
  class Comment extends Model {
    /**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     *
    static associate(models) {
      // define association here
    }
  };
  Comment.init({
    content: DataTypes.TEXT,
    userId: DataTypes.INTEGER,
    postId: DataTypes.INTEGER,
  }, {
    sequelize,
    modelName: 'Comment',
  });
  return Comment;
};

/* Matthew's code snippet here

const { Sequelize } = require("sequelize")

module.exports =  (sequelize, DataTypes) => {
    const Comment = sequelize.define('Comment',{
        id: Sequelize.INTEGER,
        body: Sequelize.TEXT,
        user: Sequelize.STRING,
        createdAt: Sequelize.DATE
    })
}

*/